{% extends 'base.html.twig' %}

{% block body %}
<div class="container-fluid">
    <div class="row" id="app">
        {% verbatim %}
        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-4 app-panel">
            <div class="test-panel">
                <rep-folder-list></rep-folder-list>
            </div>
        </div>
        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-offset-4 col-lg-4 app-panel">
            <rep-track-list></rep-track-list>
        </div>
        <div class="col-xs-12 col-sm-12 col-md-6 col-md-push-6 col-lg-offset-8 col-lg-4 app-panel">
            <div class="center-block">
                <rep-player></rep-player>
            </div>
        </div>
        {% endverbatim %}
    </div>
</div>

<!-- FOLDER LIST -->
<script type="text/x-template" id="repFolderListTpl">
    {% verbatim %}
    <table class="table table-striped table-condensed table-hover">
        <thead>
            <tr>
                <th class="folder-name clickable" v-on:click="toggleSort()" width="55%">Folders
                    <span v-bind:class="{caret: true, 'caret-up': sort == 'asc'}"></span>
                </th>
                <th width="10%" class="text-center">{{ Object.keys(folders).length }}</th>
                <th width="35%" class="text-right">
                    <button type="button" class="btn btn-default btn-xs" v-if="folders" v-on:click="playAll()">
                        <span class="glyphicon glyphicon-play-circle" aria-hidden="true"></span> Play all</button>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="(entry, key) in folders" v-bind:class="{ 'bg-primary': key == folderSelected }">
                <td class="clickable folder-name" v-on:click="folderView(key)">{{ entry.dir }}</td>
                <td class="clickable text-center" v-on:click="folderView(key)">{{ Object.keys(entry.files).length }}</td>
                <td class="text-right">
                    <button type="button" class="btn btn-default btn-xs hidden-xs" v-on:click="folderView(key)">
                        <span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> See</button>
                    <button type="button" class="btn btn-default btn-xs" v-on:click="folderPlay(key)">
                        <span class="glyphicon glyphicon-play-circle" aria-hidden="true"></span> Play</button>
                </td>
            </tr>
        </tbody>
    </table>
    {% endverbatim %}
</script>

<!-- TRACK LIST -->
<script type="text/x-template" id="repTrackListTpl">
    {% verbatim %}
    <div>
        <table class="table table-striped table-condensed table-hover">
            <thead>
                <tr>
                    <th class="folder-name" width="75%">Files</th>
                    <th width="25%" class="text-right">
                        <button type="button" class="btn btn-default btn-xs" v-if="folderSelected && Object.keys(folder.files).length > 0" v-on:click="folderPlay(folderSelected)">
                            <span class="glyphicon glyphicon-play-circle" aria-hidden="true"></span> Play all</button>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr v-if="folder == null">
                    <td colspan="2" class="text-center">Choose a folder</td>
                </tr>
                <tr v-else-if="Object.keys(folder.files).length == 0">
                    <td colspan="2" class="text-center">No files in this folder !</td>
                </tr>
                <tr v-else v-for="(entry, key) in folder.files" v-on:click="trackPlay(folderSelected, key)">
                    <td class="folder-name clickable" >{{ entry.file }}</td>
                    <td class="text-right clickable">
                        <button type="button" class="btn btn-default btn-xs" v-on:click.stop="trackPlay(folderSelected, key)">
                            <span class="glyphicon glyphicon-play-circle" aria-hidden="true"></span> Play</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    {% endverbatim %}
</script>

<!-- PLAYER -->
<script type="text/x-template" id="repPlayerTpl">
    {% verbatim %}
    <div class="audio-player">
        <h5 v-bind:class="{ bumpit: folderSelected }">Player</h5>
        <div id="player1" ref="player1" class="aplayer"></div>
        <!--<a-player v-if="songs.length > 0" :music="songs" ref="player"></a-player>-->
    </div>
    {% endverbatim %}
</script>

{% endblock %}

{% block javascript_head %}
    let appData = {{ folders | serialize('json') | raw }};
{% endblock %}

{% block javascripts %}
    <script src="/build/js/app.js"></script>
{% endblock %}
